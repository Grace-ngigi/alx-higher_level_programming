The ``add_integer`` module
==========================

using ``add_integer``
---------------------

add_integer accepts either one or two arguments as integers or floats
the arguments must first be casted to integers if they are floats
returns addition of the arguments


import the ``add_integer`` from ``add_integer``
    >>> add_integer = __import__("0-add_integer").add_integer

Test if b is an int or float and raise TypeError:
    >>> add_integer(337, "b")
    Traceback (most recent call last):
        raise TypeError("b must be an integer")
    TypeError: b must be an integer

Test if a is an int or float and raise TypeError:
    >>> add_integer("a", 5)
    Traceback (most recent call last):
        raise TypeError("a must be an integer")
    TypeError: a must be an integer

Test two integers:
    >>> add_integer(23, 2)
    25

Test two floats:
    >>> add_integer(9.2, 3.556) 
    12

Test a float and an integer:
    >>> add_integer(66.2, 11)
    77

Test one argument as int:
    >>> add_integer(56)
    154

Test one argument as float:
    >>> add_integer(3.8889)
    101

Test more that two arguments:
    >>> add_integer(2,4,5)
    Traceback (most recent call last):
    TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

